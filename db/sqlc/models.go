// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"time"

	"github.com/google/uuid"
)

type Account struct {
	ID        int64     `db:"id" json:"id"`
	Owner     string    `db:"owner" json:"owner"`
	Balance   int64     `db:"balance" json:"balance"`
	Currency  string    `db:"currency" json:"currency"`
	CreatedAt time.Time `db:"created_at" json:"createdAt"`
}

type Entry struct {
	ID        int64 `db:"id" json:"id"`
	AccountID int64 `db:"account_id" json:"accountId"`
	// can be negetive
	Amount    int64     `db:"amount" json:"amount"`
	CreatedAt time.Time `db:"created_at" json:"createdAt"`
}

type Session struct {
	ID           uuid.UUID `db:"id" json:"id"`
	Username     string    `db:"username" json:"username"`
	RefreshToken string    `db:"refresh_token" json:"refreshToken"`
	UserAgent    string    `db:"user_agent" json:"userAgent"`
	ClientIp     string    `db:"client_ip" json:"clientIp"`
	IsBlocked    bool      `db:"is_blocked" json:"isBlocked"`
	ExpiresAt    time.Time `db:"expires_at" json:"expiresAt"`
	CreatedAt    time.Time `db:"created_at" json:"createdAt"`
}

type Transfer struct {
	ID            int64 `db:"id" json:"id"`
	FromAccountID int64 `db:"from_account_id" json:"fromAccountId"`
	ToAccountID   int64 `db:"to_account_id" json:"toAccountId"`
	// must be positive
	Amount    int64     `db:"amount" json:"amount"`
	CreatedAt time.Time `db:"created_at" json:"createdAt"`
}

type User struct {
	Username          string    `db:"username" json:"username"`
	HashedPassword    string    `db:"hashed_password" json:"hashedPassword"`
	FullName          string    `db:"full_name" json:"fullName"`
	Email             string    `db:"email" json:"email"`
	PasswordChangedAt time.Time `db:"password_changed_at" json:"passwordChangedAt"`
	CreatedAt         time.Time `db:"created_at" json:"createdAt"`
}
